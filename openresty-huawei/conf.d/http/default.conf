# nginx.default.conf

server {
    listen          80;
    listen          [::]:80;
    server_name     localhost;

    # lua切割nginx日志
    set         $logdate 'access';
    set_by_lua  $logdate 'return string.match(ngx.localtime(), "^%d+-%d+-%d+")';
    access_log  /var/log/nginx/default/access.$logdate.log   main;

    location / {
        index  index.html;
    }

    location = /dev/blacklist/clear {
        content_by_lua_block {
            if ngx.req.get_method() ~= "POST" then
                return ngx.exit(403)
            end

            ngx.req.read_body()
            local clear_ip = ngx.req.get_post_args()["ip"] or nil
            if not clear_ip then
                return ngx.exit(403)
            end

            local cjson = require('cjson')
            local ip_blacklist = require('ipblacklist')
            ip_blacklist.blacklist_clear(clear_ip)
            ip_blacklist.refresh_blacklist()

            ngx.header.content_type = "application/json; charset=UTF-8";
            return ngx.say(cjson.encode({
                message = "ok"
            }))
        }
    }

    location = /favicon.ico {
    	log_not_found off;
    	access_log off;
    }

    error_page  404            /@lua404;
    location = /@lua404 {
        content_by_lua_file '/home/lua/404.lua';
    }

    error_page   500 502 503 504  /50x.html;
}
